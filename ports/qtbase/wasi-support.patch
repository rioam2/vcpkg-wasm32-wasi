From eae27016030f9e2b6b267a4595ca892da3eac1bb Mon Sep 17 00:00:00 2001
From: Rio Martinez <rio.martinez@remarkable.com>
Date: Wed, 18 Jun 2025 17:07:49 +0200
Subject: [PATCH] chore: wasi support

This PR adds rudimentary WebAssembly/WASI support
by excluding unsupported calls to non-implemented
WASI/posix syscalls.

This also adds an OS definition for WASI in Qt.
---
 src/corelib/global/qsystemdetection.h        | 2 ++
 src/corelib/kernel/qeventdispatcher_unix.cpp | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/src/corelib/global/qsystemdetection.h b/src/corelib/global/qsystemdetection.h
index 0cbcef27407..0dfb4f0070a 100644
--- a/src/corelib/global/qsystemdetection.h
+++ b/src/corelib/global/qsystemdetection.h
@@ -130,6 +130,8 @@
 #elif defined(__HAIKU__)
 #  define Q_OS_HAIKU
 #elif defined(__MAKEDEPEND__)
+#elif defined(__wasi__)
+#  define Q_OS_WASI
 #else
 #  error "Qt has not been ported to this OS - see http://www.qt-project.org/"
 #endif
diff --git a/src/corelib/kernel/qeventdispatcher_unix.cpp b/src/corelib/kernel/qeventdispatcher_unix.cpp
index 1b7a6537b05..b3aaa14a94e 100644
--- a/src/corelib/kernel/qeventdispatcher_unix.cpp
+++ b/src/corelib/kernel/qeventdispatcher_unix.cpp
@@ -174,8 +174,10 @@ int QThreadPipe::check(const pollfd &pfd)
 
 QEventDispatcherUNIXPrivate::QEventDispatcherUNIXPrivate()
 {
+#if !defined(Q_OS_WASI)
     if (Q_UNLIKELY(threadPipe.init() == false))
         qFatal("QEventDispatcherUNIXPrivate(): Cannot continue without a thread pipe");
+#endif
 }
 
 QEventDispatcherUNIXPrivate::~QEventDispatcherUNIXPrivate()
-- 
2.39.5 (Apple Git-154)

